/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.29
 * Generated at: 2018-03-20 14:14:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import javax.swing.border.Border;
import member.model.vo.Member;
import board.model.vo.Board;
import java.util.ArrayList;
import java.sql.Date;

public final class boardListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/board/../../footer.html", Long.valueOf(1521548905151L));
    _jspx_dependants.put("/views/board/../../header.jsp", Long.valueOf(1521548904858L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("board.model.vo.Board");
    _jspx_imports_classes.add("javax.swing.border.Border");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"./boardError.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("   ");

   	ArrayList<Board> list = (ArrayList<Board>)request.getAttribute("list");
  	int listCount=((Integer)request.getAttribute("listCount")).intValue();
    int currentPage=((Integer)request.getAttribute("currentPage")).intValue();
    int maxPage=((Integer)request.getAttribute("maxPage")).intValue();
    int startPage=((Integer)request.getAttribute("startPage")).intValue();
    int endPage=((Integer)request.getAttribute("endPage")).intValue();
    Member loginUser=(Member)session.getAttribute("loginUser");
    
   
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function showWriteForm(){\r\n");
      out.write("\tlocation.href=\"views/board/boardWriteForm.jsp?userid=");
      out.print(loginUser.getUserId());
      out.write("\";\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=UTF-8>\r\n");
      out.write("<title>header</title>\r\n");
      out.write("<link href=\"/first/resources/css/header.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<header>\r\n");
      out.write("\t<h1>first web application</h1>\r\n");
      out.write("\t<nav>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\r\n");
      out.write("\t<li><a href=\"/first/index.jsp\">home</a></li>\r\n");
      out.write("\t<li><a href=\"/first/nlist\">공지사항</a></li>\r\n");
      out.write("\t<li><a href=\"/first/blist?page=1\">게시글</a></li>\r\n");
      out.write("\t<li><a href=\"\">앨범</a></li>\r\n");
      out.write("\t<li><a href=\"\">자료실</a></li>\r\n");
      out.write("\t\r\n");
      out.write("\t</ul>\t\r\n");
      out.write("\t</nav>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<hr Style=\"clear:both;\">\r\n");
      out.write("<h2 align=\"center\">게시글 목록</h2>\r\n");
      out.write("<h4 align=\"center\">총 게시글 갯수: ");
      out.print( listCount );
      out.write("</h4>\r\n");
if(loginUser!=null){ 
      out.write("\r\n");
      out.write("<div Style=\"align:center; text-align:center\">\r\n");
      out.write("<button onclick=\"showWriteForm();\">글쓰기</button>\r\n");
      out.write("</div>\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\" border=\"1\" cellspacing=\"0\" width=\"700\">\r\n");
      out.write("<tr><th>번호</th><th>제목</th><th>작성자</th><th>날자</th><th>조회수</th><th>첨부파일</th></tr>\r\n");
for(Board b:list){ 
      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("\t<td align=\"center\">");
      out.print(b.getBoardNum() );
      out.write("</td>\r\n");
      out.write("\t<td>   ");
 if(b.getBoardReplyLev()==1){ 
      out.write("\r\n");
      out.write("\t&nbsp;&nbsp; >\r\n");
      out.write("\t");
}else if(b.getBoardReplyLev()==2){ 
      out.write("\r\n");
      out.write("\t&nbsp;&nbsp;&nbsp;&nbsp; >>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t<!-- 로그인 한 상태일때만 상세보기 링크처리 -->\r\n");
      out.write("\t");
 if(loginUser!=null){ 
      out.write("\r\n");
      out.write("\t<a href=\"/first/bdetail?bnum=");
      out.print(b.getBoardNum());
      out.write("&page=");
      out.print(currentPage);
      out.write('"');
      out.write('>');
      out.print(b.getBoardTitle() );
      out.write("</a>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t</td>\r\n");
      out.write("\t<td>");
      out.print(b.getBoardWriter() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(b.getBoardDate() );
      out.write("</td>\r\n");
      out.write("\t<td>");
      out.print(b.getBoardReadCount() );
      out.write("</td>\r\n");
      out.write("\t<td>");
 if(b.getBoardOriginalFileName()!=null){ 
      out.write("\r\n");
      out.write("\t◎\r\n");
      out.write("\t");
}else{ 
      out.write("\r\n");
      out.write("\t&nbsp;\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t</td> \r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
}//for종료 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<!-- 페이징 처리 -->\r\n");
      out.write("<div style=\"text-align: center\">\r\n");
      out.write("\r\n");
 if(currentPage<=1){ 
      out.write("\r\n");
      out.write("[맨처음]&nbsp;\r\n");
}else{ 
      out.write("\r\n");
      out.write("<a href=\"/first/blist?page=1\">[맨처음]</a>\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 if((currentPage-10)>=startPage && (currentPage-10)>1){ 
      out.write("\r\n");
      out.write("<a href=\"/first/blist?page=");
      out.print(startPage-10 );
      out.write("\">[prev]</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
}else{ 
      out.write("\r\n");
      out.write("[prev]&nbsp;\r\n");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
for(int p= startPage; p<=endPage; p++){ 
		
	if(p==currentPage){
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<font color=\"red\" size=\"4\">[");
      out.print(p);
      out.write("]</font>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
}else{ 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<a href=\"/first/blist?page=");
      out.print( p );
      out.write('"');
      out.write('>');
      out.print( p );
      out.write("</a>\r\n");
      out.write("\t\t\r\n");
}} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 if((currentPage+10)<=endPage && (currentPage+10)< maxPage ){ 
      out.write("\r\n");
      out.write("<a href=\"/first/blist?page=");
      out.print(endPage+10 );
      out.write("\">[Next]</a>\r\n");
}else{ 
      out.write("\r\n");
      out.write("[Next]&nbsp;\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
 if(currentPage>=maxPage){ 
      out.write("\r\n");
      out.write("[맨끝]&nbsp;\r\n");
}else{ 
      out.write("\r\n");
      out.write("<a href=\"/first/blist?page=");
      out.print(maxPage);
      out.write("\">[맨끝]</a>\r\n");
} 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>footer</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("\th5 {\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tbackground : navy;\r\n");
      out.write("\t\tcolor : white;\r\n");
      out.write("\t\twidth : 80%;\r\n");
      out.write("\t\theight : 70px;\r\n");
      out.write("\t\tpadding-top : 15px;\r\n");
      out.write("\t\tmargin-bottom: 0px;\r\n");
      out.write("\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h5 align=\"center\">copyright@2018.03.13 kh.org<br>\r\n");
      out.write("\ttel : 02-1234-5678 &nbsp; &nbsp;\r\n");
      out.write("\tfax : 02-1234-5678\r\n");
      out.write("\t</h5>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
